name: "SSH Copy Files"
description: "SSH Copy Files"
inputs:
  files:
    description: "Files to be transferred"
    required: true
  remote_ssh_chain:
    description: "Remote ssh chain to remote server"
    required: true
  remote_path:
    description: "Remote: root path"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Copy Files Via SSH"
      shell: bash
      run: |
        echo "::group::Syncing data..."
        
        files="${{ inputs.files }}"
        ssh_chain="${{ inputs.remote_ssh_chain }}"
        path="${{ inputs.remote_path }}"                    

        # split files by ,
        IFS=',' read -ra entries <<< "$files"
        
        directory_exists() {
          local path="${1}"
          ssh "$ssh_chain" "if [ -d '${path}' ]; then echo "true"; else echo "false"; fi"
        }
        
        # for each file
        for entry in "${entries[@]}"; do
        
          # get target path, if exists
          if [[ "$entry" == *":"* ]]; then
            # split by :
            IFS=':' read -r source target <<< "$entry"
          else
            # no :, source is the same, and target is the basename of the source
            source="$entry"
            target="$(basename "$source")"
            # remove leading +
            target="${target#+}"
          fi
        
          # extend target path with root path
          target="${path}/${target}"
                          
          if [ -d "$source" ]; then
            target_path="$target"
          else 
            target_path="$(dirname "$target")"
          fi 
          target_path_exists=$(directory_exists "$target_path")
          if [ "$target_path_exists" == "false" ]; then
            ssh "$ssh_chain" "mkdir -p $target_path"
            if [ $? -ne 0 ]; then
              echo "ðŸ”¥ create directory $target_path on remote server failure"
              echo "::error::create directory $target_path on remote server failure"
              exit 1
            fi
            echo "âœ… created path $target_path"  
            echo "::notice::created path $target_path"    
          fi 
        
          required=""
          if [[ "$source" == "+"* ]]; then
            required="true"
            source="${source#+}"
          fi
          if [ -f "$source" ]; then
            scp "$source" "$ssh_chain:${target}"
            if [ $? -ne 0 ]; then
              echo "ðŸ”¥ copy $source to $target on remote server failure"
              echo "::error::copy $source to $target on remote server failure"
              exit 1
            fi
            echo "âœ… copy $source to ${target}"        
            echo "::notice::copy $source to ${target}"        
          else
            if [ -d "${source}" ]; then
              ssh "$ssh_chain" echo "âœ… SSH connection works"
              ssh "$ssh_chain" ls -ld "$target"
              rsync -avz --delete -e ssh "${source}" "$ssh_chain:${target}"
              if [ $? -ne 0 ]; then
                echo "ðŸ”¥ rsync $source to $target on remote server failure"
                echo "::error::rsync $source to $target on remote server failure"
                exit 1
              fi 
              echo "âœ… rsync $source to ${target}"        
              echo "::notice::rsync $source to ${target}"           
            else
              if [ -n "${required}" ]; then
                echo "ðŸ”¥ copy $source failure, file/directory does not exist"
                echo "::error::copy $source failure, file/directory does not exist"
                exit 1
              else
                echo "âœ… copy $source skipped, file/directory does not exist"
                echo "::notice::copy $source skipped, file/directory does not exist"
              fi
            fi
          fi
        done

        echo "::endgroup::"  
