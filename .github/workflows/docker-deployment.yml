name: Docker Compose Deployment

on:
  workflow_call:
    inputs:
      remote-host:
        description: "Remote: host"
        required: true
        type: string
      remote-port:
        description: "Remote: port"
        required: false
        default: "22"
        type: string
      remote-user:
        description: "Remote: user"
        required: true
        type: string
      remote-path:
        description: "Remote: root path"
        required: true
        type: string
      transfer-files:
        description: "Files to be transferred"
        required: true
        type: string
      docker-command:
        description: "Docker Compose Command"
        required: false
        type: string
      docker-registry:
        description: "Docker Host (default: Docker Hub)"
        required: false
        type: string
      docker-username:
        description: "Docker login: Username"
        required: false
        type: string
    secrets:
      DOCKER_TOKEN:
        description: "Docker login: Token"
        required: false
      REMOTE_SSH_KEY:
        description: "Remote: ssh key"
        required: false

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "SSH Connect"
        id: connect
        uses: draftm0de/github.scripts/.github/actions/ssh-connect@main
        with:
          remote-host: ${{ inputs.remote-host }}
          remote-port: ${{ inputs.remote-port }}
          remote-user: ${{ inputs.remote-user }}
          remote-ssh-key:  ${{ secrets.REMOTE_SSH_KEY }}

      - name: "Sync Deployment Files"
        uses: draftm0de/github.scripts/.github/actions/ssh-copy@main
        with:
          files: ${{ inputs.transfer-files }}
          remote-ssh-chain: ${{ steps.connect.outputs.remote-ssh-chain }}
          remote-path: ${{ inputs.remote-path }}

      - name: "Docker Compose"
        if: ${{ inputs.docker-command }}
        uses: draftm0de/github.scripts/.github/actions/ssh-docker-compose@main
        with:
          command: ${{ inputs.docker-command }}
          remote-ssh-chain: ${{ steps.connect.outputs.remote-ssh-chain }}
          remote-path: ${{ inputs.remote-path }}
          docker-registry: ${{ inputs.docker-registry }}
          docker-username: ${{ inputs.docker-username }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}